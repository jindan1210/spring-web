#设置级别:  debug < info < warn < error
#  debug: 显示debug,info,warn,error
#  infor: 显示 infor,warn,error
#  warn:  显示 warn,error
#  error: 只显示error

#log4j.rootCategory=INFO, file
#rootCategory是旧的使用名称,对应的是Category类(不推荐使用) 而 rootLogger是新的使用名称,对应的是Logger类

#appenderName：就是指定日志信息要输出到哪里。可以同时指定多个输出目的地，用逗号隔开。
#如：log4j.rootLogger＝INFO,A1,B2,C3
log4j.rootLogger=INFO, file

#每天产生一个日志文件
log4j.appender.file =org.apache.log4j.DailyRollingFileAppender

#日志文件的存放地址,一般情况下不放在C盘(C盘受保护)
log4j.appender.file.File=logs/middleware.log
#每天滚动一次文件,即每天产生一个新的文件,
log4j.appender.file.DatePattern = '.'yyyy-MM-dd

#配置日志输出的信息格式(Layout:) 有以下集中形式
   # org.apache.log4j.HTMLLyout(以HTML表格形式布局)
   # org.apache.log4j.PatternLayout(可以灵活的指定布局模式)
      #  在PatternLayout选项中:ConversionPattern是设定以怎样的格式显示消息
   # org.apache.log4j.SimpleLayout(包含日志信息的级别和信息字符串)
   # org.apache.log4j.TTCCLayout(包含日志产生的时间,线程,类别等信息)
log4j.appender.file.layout=org.apache.log4j.PatternLayout

log4j.appender.file.layout.ConversionPattern=%d-[SP] %p %t %c - %m%n

     # [SP]是log信息的开头，可以为任意字符，一般为项目简称
    # %d：输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，如：%d{yyyy/MM/dd HH:mm:ss,SSS}
    # %p：输出日志信息的优先级，即DEBUG，INFO，WARN，ERROR，FATAL。
    # %t：输出产生该日志事件的线程名。
    # 还可以在%与格式字符之间加上修饰符来控制其最小长度、最大长度、和文本的对齐方式。
       #c：指定输出category的名称，最小的长度是20，如果category的名称长度小于20的话，默认的情况下右对齐
    # %m：输出代码中指定的具体日志信息
    # %n：输出一个回车换行符，Windows平台为"rn"，Unix平台为"n"
